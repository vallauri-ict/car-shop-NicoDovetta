<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ofdImg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/AAAA////AP9cTRP/fmh7/5d96f+6m8z/0K1g/9SxCv/RqwD/0q4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAL/wEBbf8EBPX/Cwn+/zkv/f+agej/07CF/tWxEBkA
        AADtqJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD2IyMA/wAAAP0GBif/AADS/wAA//8AAP//AQH//yMd//+K
        c+/91LGP6qOXGNyDhQjdhYYF3oeHAd6HhwDeh4cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeh4cA3oWFANmamgLmaGgU9SoqdP8AAPz/AAD//wAA//8A
        AP//AAD//yQd//2KdPTwtqHS34qJod2FhmLeh4cj3oeHB96HhwLeh4cA3oeHAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6HhwDehoYG3YyMON+FhbTvRET2/wAA//8A
        AP//AAD//wAA//8AAP//AAD//ysj//yXf/3srZ363YaG992Ght7eh4eM3oeHLN6HhwTeh4cB3oeHAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3oeHBt6Hh0jeiIjb34KC+/Qv
        L///AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//zgu//qki//opJj/3YSG/t6Gh/veh4fa3oeHb96H
        hxXeh4cA3oeHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeh4cp3oeHz96I
        iPzgfn7/9yAg//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AgL//05A//eulf/lm5P/3YSF/96H
        h/7eh4f23oeHmd6HhyPeh4cA3oeHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6H
        h4neh4f33omJ/+F7e//5Ghr//wAA//8AAP//AAD//wAA//8CAv//Bwb//wQD//8AAP//Cgn//2ZV//Oy
        nP/hko7/3YSG/96Hh//eh4f+3oeHot6HhyTeh4cA3oeHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3oeHz96Hh/3eiYn/4Xp6//kaGv//AAD//wAA//8AAP//AAD//xEO//5DOf/9MCn//wAA//8A
        AP//GBT//oBr/++wnf/fi4r/3YWG/96Hh//eh4f+3oeHit6HhxXeh4cA3oeHAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADeh4fq3oeH/t6Jif/he3v/+Roa//8AAP//AAD//wAA//8AAP//FBD/+mtd//Jv
        Zv/7Bgf//wAA//8AAP//KyP//JZ//+qpm//eh4f/3oaG/96Hh//eh4fr3oeHUd6HhwPeh4cAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6Hh+Teh4f+3omJ/+F7e//5Gxv//wAA//8AAP//AAD//wAA//8R
        Df/4bF3/6JqQ/+82OP//AAD//wAA//8AAP//QTX/+aaO/+eglv/dhYb/3oeH/96Hh//eh4eh3oeHHd6H
        hwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3oeHvd6Hh/zeiYn/4Xt7//gbG///AAD//wAA//8A
        AP//AAD//w8M//plVv/mqJ3/4mxu//cjI///AAD//wAA//8BAf//WEj/9q6W/+OYkf/dhYb/3oeH/96H
        h9reh4c03oeHAN6HhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeh4dx3oeH9t6Jif/hfHz/+Bwc//8A
        AP//AAD//wAA//8AAP//DAr/+19R/+ilmf/bhoj/6Vtb//sQEP//AAD//wAA//8KCP//b1z/87Cb/+GS
        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
        8ADAA/gAwAP4AMAD/ADAA/8BwAP//8AD//8=
</value>
  </data>
</root>